{"version":3,"sources":["utils/constants.js","hooks/useFetch.js","components/Loading/Loading.jsx","components/MovieList/MovieList.jsx","components/SliderMovies/SliderMovies.jsx","pages/home/home.jsx","pages/error404.jsx","components/ModalVideo/ModalVideo.jsx","pages/movie/movie.jsx","components/MovieCard/MovieCard.jsx","components/PaginationMovie/PaginationMovie.jsx","pages/new-movies.jsx","pages/popular.jsx","pages/search/search.jsx","components/MenuTop/MenuTop.jsx","components/Footer/Footer.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["URL_API","API_KEY","useFetch","url","options","useState","result","setResult","loading","setLoading","error","setError","useEffect","a","fetch","res","json","getData","Loading","className","size","RenderMovie","props","movie","poster_path","id","title","posterPath","Item","Meta","avatar","src","to","type","shape","icon","RightOutlined","MovieList","urlMovieList","header","bordered","dataSource","results","renderItem","Movie","backdrop_path","overview","backdropPath","style","backgroundImage","SliderMovies","newMovies","autoplay","map","Home","urlPopular","popularMovies","urlTopRanked","topRankedMovies","marginBottom","xs","sm","md","lg","Error404","ModalVideo","isOpen","close","videoKey","videoPlatform","urlVideo","setUrlVideo","visible","centered","onCancel","footer","controls","muted","movieInfo","span","offset","image","PosterMovie","MovieInfo","release_date","genres","isVisibleModal","setIsVisibleModal","videoMovie","openModal","closeModal","moment","format","length","PlayCircleOutlined","onClick","key","site","renderVideo","gender","name","useParams","CardMovie","Card","hoverable","cover","alt","MovieCard","loadingState","gutter","PaginationMovie","currentPage","totalItems","onChangePage","current","total","pageSize","onChange","NewMovies","page","setPage","setUrl","setLoadingState","response","movies","minHeight","total_results","Popular","Search","inputValue","setInputValue","htmlFor","onKeyUp","e","target","value","placeholder","prefix","VideoCameraFilled","MenuTop","theme","mode","defaultSelectedKeys","backgroundColor","Footer","Layout","App","Header","Content","basename","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.96867062.chunk.js","sourcesContent":["export const URL_API = \"https://api.themoviedb.org/3\";\nexport const API_KEY = \"e33f37bfeb5b39802d2c095f1753c610\";\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, options) =>{\n    const [result, setResult] = useState(null);\n    const [loading, setLoading] =  useState(true);\n    const [error, setError] = useState(null);\n\nuseEffect(() =>{\n    const getData = async() =>{\n        try{\n            const res = await fetch(url, options);\n            const json= await res.json();\n            setResult(json);\n            setLoading(false)\n        } catch (err){\n            setError(err);\n            setLoading(false)\n        }\n    }\n    getData();\n}, [url, options])\n\nreturn {result, loading, error};\n}\n\nexport default useFetch;","import { Spin } from \"antd\";\nimport \"./Loading.sass\";\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <Spin size=\"large\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import { List, Button, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { RightOutlined } from \"@ant-design/icons\";\nimport Loading from \"../Loading\";\nimport \"./MovieList.sass\";\n\nconst MovieList = (props) => {\n  const { title, urlMovieList } = props;\n\n  if (urlMovieList.Loading || !urlMovieList.result) {\n    return <Loading />;\n  }\n  return (\n    <List\n      className=\"movie-list\"\n      size=\"default\"\n      header={<h2>{title}</h2>}\n      bordered\n      dataSource={urlMovieList.result.results}\n      renderItem={(movie) => <RenderMovie movie={movie} />}\n    />\n  );\n};\n\nconst RenderMovie = (props) => {\n  const {\n    movie: { poster_path, id, title },\n  } = props;\n\n  const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\n\n  return (\n    <List.Item className=\"movie-list__movir\">\n      <List.Item.Meta\n        avatar={<Avatar src={posterPath} />}\n        title={<Link to={`/movie/${id}`}> {title}</Link>}\n      />\n      <Link to={`/movie/${id}`}>\n        <Button type=\"primary\" shape=\"circle\" icon={<RightOutlined />}></Button>\n      </Link>\n    </List.Item>\n  );\n};\n\nexport default MovieList;\n","import { Carousel, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../Loading\";\nimport \"./SliderMovies.sass\";\n\nconst SliderMovies = (props) => {\n  const { newMovies } = props;\n\n  if (newMovies.loading || !newMovies.result) {\n    return <Loading />;\n  }\n\n  const { results } = newMovies.result;\n\n  return (\n    <Carousel autoplay>\n      {results.map((movie) => (\n        <Movie key={movie.id} movie={movie} />\n      ))}\n    </Carousel>\n  );\n};\n\nconst Movie = (props) => {\n  const {\n    movie: { id, backdrop_path, title, overview },\n  } = props;\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n\n  return (\n    <div\n      className=\"slider-movies__movie\"\n      style={{ backgroundImage: `url(\"${backdropPath}\")` }}\n    >\n      <div className=\"slider-movies__movie-info\">\n        <div>\n          <h2>{title}</h2>\n          <p>{overview}</p>\n          <Link to={`/movie/${id}`}>\n            <Button type=\"primary\" className=\"boton\">\n              More\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SliderMovies;\n","import { URL_API, API_KEY } from \"../../utils/constants\";\nimport { Row, Col } from \"antd\";\nimport useFetch from \"../../hooks/useFetch\";\nimport MovieList from \"../../components/MovieList/MovieList\";\nimport SliderMovies from \"../../components/SliderMovies\";\nimport \"./home.sass\";\n\nconst Home = () => {\n  const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=en-ES&page=1`;\n  const newMovies = useFetch(url);\n\n  const urlPopular = `${URL_API}/movie/popular?api_key=${API_KEY}&language=en-ES&page=1`;\n  const popularMovies = useFetch(urlPopular);\n\n  const urlTopRanked = `${URL_API}/movie/top_rated?api_key=${API_KEY}&language=en-ES&page=1`;\n  const topRankedMovies = useFetch(urlTopRanked);\n\n  return (\n    <div>\n      <SliderMovies newMovies={newMovies} />\n      <Row style={{marginBottom:'50px'}}>\n        <Col xs={24} sm={24} md={12} lg={12}>\n          <MovieList title=\"Popular Movies\" urlMovieList={popularMovies} />\n        </Col>\n        <Col xs={24} sm={24} md={12} lg={12}>\n          <MovieList title=\"Top Best Movies\" urlMovieList={topRankedMovies} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\n\nconst Error404 = () => {\n  return (\n    <div className=\"error-container\">\n      <div className=\"error-404\"></div>\n      <p>Sorry, the page you visited does not exist.</p>\n      <Link to=\"/\">\n        {\" \"}\n        <Button type=\"primary\"> Home</Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Error404;\n","import { useState, useEffect } from \"react\";\nimport { Modal } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport \"./ModalVideo.sass\";\n\nconst ModalVideo = (props) => {\n  const { isOpen, close, videoKey, videoPlatform } = props;\n\n  const [urlVideo, setUrlVideo] = useState(null);\n\n  useEffect(() => {\n    switch (videoPlatform) {\n      case \"YouTube\":\n        setUrlVideo(`https://youtu.be/${videoKey}`);\n        break;\n      case \"Vimeo\":\n        setUrlVideo(`https://vimeo.com/${videoKey}`);\n        break;\n      default:\n        break;\n    }\n  }, [videoKey, videoPlatform]);\n\n  return (\n    <Modal\n      className=\"modal-video\"\n      visible={isOpen}\n      centered\n      onCancel={close}\n      footer={false}\n    >\n      <ReactPlayer url={urlVideo} controls muted />\n    </Modal>\n  );\n};\n\nexport default ModalVideo;\n","import { useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\nimport { URL_API, API_KEY } from \"../../utils/constants\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport useFetch from \"../../hooks/useFetch\";\nimport Loading from \"../../components/Loading\";\nimport ModalVideo from \"../../components/ModalVideo\";\nimport \"./movie.sass\";\n\nconst Movie = () => {\n  const { id } = useParams(); //nos da el ID\n\n  const url = `${URL_API}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n  const movieInfo = useFetch(url);\n\n  if (movieInfo.Loading || !movieInfo.result) {\n    return <Loading />;\n  }\n\n  return <RenderMovie movieInfo={movieInfo} />;\n};\n\nconst RenderMovie = (props) => {\n  const {\n    movieInfo: {\n      result: { backdrop_path, poster_path },\n    },\n  } = props;\n\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n\n  return (\n    <div\n      className=\"movie\"\n      style={{ backgroundImage: `url('${backdropPath}')` }}\n    >\n      <div className=\"movie__dark\">\n        <Row className=\"fila\">\n          <Col span={8} offset={3} className=\"movie__poster\">\n            <PosterMovie image={poster_path} />\n          </Col>\n          <Col span={9} className=\"movie-info-container\">\n            <MovieInfo movieInfo={props.movieInfo} />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst PosterMovie = (props) => {\n  const { image } = props;\n  let posterPath;\n  if (image === null) {\n    posterPath =\n      \"https://i.pinimg.com/736x/04/85/5b/04855bae4a3237935ebfc655293400ca.jpg\";\n  } else {\n    posterPath = `https://image.tmdb.org/t/p/original${image}`;\n  }\n\n  return (\n    <div\n      style={{ backgroundImage: `url('${posterPath}')` }}\n      className=\"movie-poster-image\"\n    ></div>\n  );\n};\n\nconst MovieInfo = (props) => {\n  const {\n    movieInfo: {\n      result: { title, id, release_date, overview, genres },\n    },\n  } = props;\n\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const url = `${URL_API}/movie/${id}/videos?api_key=${API_KEY}&language=es-US`;\n  const videoMovie = useFetch(url);\n\n  const openModal = () => setIsVisibleModal(true);\n\n  const closeModal = () => setIsVisibleModal(false);\n\n  const renderVideo = () => {\n    if (videoMovie.result) {\n      if (videoMovie.result.results.length > 0) {\n        return (\n          <div>\n            <Button\n              icon={<PlayCircleOutlined />}\n              onClick={openModal}\n              className=\"button\"\n            >\n              trailer\n            </Button>\n            <ModalVideo\n              videoKey={videoMovie.result.results[0].key}\n              videoPlatform={videoMovie.result.results[0].site}\n              isOpen={isVisibleModal}\n              close={closeModal}\n            />\n          </div>\n        );\n      }\n    }\n  };\n  return (\n    <div className=\"movie-info\">\n      <div className=\"info\">\n        <h1>\n          {title}\n          <span>{moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}</span>\n        </h1>\n        {renderVideo()}\n      </div>\n      <div className=\"content\">\n        <h3>General</h3>\n        <p>{overview === \"\" ? \"No information\" : overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres.length === 0\n            ? \"No information\"\n            : genres.map((gender) => <li key={gender.id}>{gender.name}</li>)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import { Card, Col, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../Loading\";\nimport \"./MovieCard.sass\";\n\nconst MovieCard = (props) => {\n  const { url, loadingState } = props;\n  const { results } = url;\n\n  if (!results) {\n    return (\n      <div className={!loadingState ? \"hidden\" : null}>\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <Row gutter={[8, 32]} className=\"centrar\">\n      {results.map((movie) => (\n        <CardMovie key={movie.id} movie={movie} />\n      ))}\n    </Row>\n  );\n};\n\nconst CardMovie = (props) => {\n  const { Meta } = Card;\n  const {\n    movie: { id, title, poster_path },\n  } = props;\n\n  let backdropPath;\n\n  if (poster_path === null) {\n    backdropPath =\n      \"https://i.pinimg.com/736x/04/85/5b/04855bae4a3237935ebfc655293400ca.jpg\";\n  } else {\n    backdropPath = `https://image.tmdb.org/t/p/original${poster_path}`;\n  }\n  return (\n    <Col lg={6} className=\"centrar\">\n      <Link to={`/movie/${id}`}>\n        <Card\n          className=\"card\"\n          hoverable\n          cover={\n            <img\n              alt={title}\n              src={backdropPath}\n              className=\"img-card\"\n            />\n          }\n        >\n          <Meta title={title} className=\"title-card\" />\n        </Card>\n      </Link>\n    </Col>\n  );\n};\n\nexport default MovieCard;\n","import { Pagination } from \"antd\";\nimport \"./PaginationMovie.sass\";\n\nconst PaginationMovie = (props) => {\n  const { currentPage, totalItems, onChangePage } = props;\n  return (\n    <Pagination\n      current={currentPage}\n      total={totalItems}\n      pageSize={20}\n      onChange={onChangePage}\n    />\n  );\n};\n\nexport default PaginationMovie;\n","import { useState, useEffect } from \"react\";\nimport { URL_API, API_KEY } from \"../utils/constants\";\nimport MovieCard from \"../components/MovieCard\";\nimport PaginationMovie from \"../components/PaginationMovie\";\n\nconst NewMovies = () => {\n  const [page, setPage] = useState(1);\n  const [url, setUrl] = useState([]);\n  const [loadingState, setLoadingState] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        `${URL_API}/movie/now_playing?api_key=${API_KEY}&languaje=en-ES&page=${page}`\n      );\n      const movies = await response.json();\n      setLoadingState(false);\n      setUrl(movies);\n    })();\n  }, [page]);\n\n  const onChangePage = (page) => setPage(page);\n\n  return (\n    <div>\n      <div style={{ minHeight: \"calc(100vh - 140px)\" }}>\n        <h1>New Movies</h1>\n        <MovieCard url={url} loadingState={loadingState} />\n        <PaginationMovie\n          currentPage={url.page}\n          totalItems={url.total_results}\n          onChangePage={onChangePage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NewMovies;\n","import { useState, useEffect } from \"react\";\nimport { URL_API, API_KEY } from \"../utils/constants\";\nimport MovieCard from \"../components/MovieCard\";\nimport PaginationMovie from \"../components/PaginationMovie\";\n\nconst Popular = () => {\n  const [page, setPage] = useState(1);\n  const [url, setUrl] = useState([]);\n  const [loadingState, setLoadingState] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        `${URL_API}/movie/popular?api_key=${API_KEY}&languaje=en-US&page=${page}`\n      );\n      const movies = await response.json();\n      setLoadingState(false);\n      setUrl(movies);\n    })();\n  }, [page]);\n\n  const onChangePage = (page) => setPage(page);\n\n  return (\n    <div>\n      <div style={{ minHeight: \"74.5vh\" }}>\n        <h1>Popular Movies</h1>\n        <MovieCard url={url} loadingState={loadingState} />\n        <PaginationMovie\n          currentPage={url.page}\n          totalItems={url.total_results}\n          onChangePage={onChangePage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Popular;\n","import { useState, useEffect } from \"react\";\nimport { URL_API, API_KEY } from \"../../utils/constants\";\nimport { Input } from \"antd\";\nimport { VideoCameraFilled } from \"@ant-design/icons\";\nimport MovieCard from \"../../components/MovieCard\";\nimport PaginationMovie from \"../../components/PaginationMovie\";\nimport \"./search.sass\";\n\nconst Search = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [url, setUrl] = useState([]);\n  const [loadingState, setLoadingState] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\n        `${URL_API}/search/movie?api_key=${API_KEY}&languaje=en-ES&query=${inputValue}&page=${page}&include_adult=false`\n      );\n      const movies = await response.json();\n      setLoadingState(false);\n      setUrl(movies);\n    })();\n  }, [page, inputValue]);\n\n  const onChangePage = (page) => setPage(page);\n\n  const onHandlerInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"main-container\">\n        <div className=\"input-container\">\n          <label htmlFor=\"search\">Search Movie</label>\n          <Input\n            onKeyUp={onHandlerInput}\n            size=\"large\"\n            placeholder=\"Type here to search\"\n            prefix={<VideoCameraFilled />}\n          />\n        </div>\n        <MovieCard url={url} loadingState={loadingState} />\n        <PaginationMovie\n          currentPage={url.page}\n          totalItems={url.total_results}\n          onChangePage={onChangePage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import { Link } from \"react-router-dom\";\nimport { Menu } from \"antd\";\nimport \"./MenuTop.sass\";\n\nconst MenuTop = () => {\n  return (\n    <div className=\"menu-top\">\n      <div className=\"menu-top__logo\">\n        <div className=\"logo2\"></div>\n      </div>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={[\"1\"]}\n        style={{ backgroundColor: \"#0F7173\" }}\n      >\n        <Menu.Item key=\"1\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <Link to=\"/new-movies\">New Movies</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <Link to=\"/popular\">Popular</Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          <Link to=\"/search\">Search</Link>\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n};\n\nexport default MenuTop;\n","import { Layout } from \"antd\";\nimport \"./Footer.sass\";\n\nconst Footer = () => {\n  const { Footer } = Layout;\n\n  return (\n    <Footer className=\"footer\">\n      <p>Hecho por Mari y Silvi 🎬</p>\n    </Footer>\n  );\n};\n\nexport default Footer;\n","import { Layout } from \"antd\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\n//pages\nimport Home from \"./pages/home\";\nimport Error404 from \"./pages/error404\";\nimport Movie from \"./pages/movie\";\nimport NewMovies from \"./pages/new-movies\";\nimport Popular from \"./pages/popular\";\nimport Search from \"./pages/search\";\n\n//components\nimport MenuTop from \"./components/MenuTop\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const { Header, Content } = Layout;\n\n  return (\n    <Layout>\n      <HashRouter basename=\"/\">\n        <Header className=\"header\">\n          <MenuTop />\n        </Header>\n        <Content style={{minHeight:'fit-content'}}>\n          <Switch>\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route exact={true} path=\"/new-movies\" component={NewMovies} />\n            <Route exact={true} path=\"/popular\" component={Popular} />\n            <Route exact={true} path=\"/search\" component={Search} />\n            <Route exact={true} path=\"/movie/:id\" component={Movie} />\n            <Route path=\"*\" component={Error404} />\n          </Switch>\n        </Content>\n        <Footer />\n      </HashRouter>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n"],"sourceRoot":""}