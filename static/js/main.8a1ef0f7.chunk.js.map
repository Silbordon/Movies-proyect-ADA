{"version":3,"sources":["utils/constants.js","hooks/useFetch.js","components/Loading/Loading.jsx","components/MovieList/MovieList.jsx","components/SliderMovies/SliderMovies.jsx","pages/home/home.jsx","pages/error404.jsx","components/ModalVideo/ModalVideo.jsx","pages/movie/movie.jsx","components/MovieCard/MovieCard.jsx","components/PaginationMovie/PaginationMovie.jsx","pages/new-movies.jsx","pages/popular.jsx","pages/search/search.jsx","components/MenuTop/MenuTop.jsx","components/Footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["URL_API","API_KEY","useFetch","url","options","useState","result","setResult","loading","setLoading","error","setError","useEffect","a","fetch","res","json","getData","Loading","className","size","RenderMovie","props","movie","poster_path","id","title","posterPath","Item","Meta","avatar","src","to","type","shape","icon","RightOutlined","MovieList","urlMovieList","header","bordered","dataSource","results","renderItem","Movie","backdrop_path","overview","backdropPath","style","backgroundImage","SliderMovies","newMovies","autoplay","map","Home","urlPopular","popularMovies","urlTopRanked","topRankedMovies","marginBottom","xs","sm","md","lg","Error404","ModalVideo","isOpen","close","videoKey","videoPlatform","urlVideo","setUrlVideo","visible","centered","onCancel","footer","controls","muted","movieInfo","span","offset","image","PosterMovie","MovieInfo","release_date","genres","isVisibleModal","setIsVisibleModal","videoMovie","openModal","closeModal","moment","format","length","PlayCircleOutlined","onClick","key","site","renderVideo","gender","name","useParams","CardMovie","Card","hoverable","cover","alt","MovieCard","loadingState","gutter","PaginationMovie","currentPage","totalItems","onChangePage","current","total","pageSize","onChange","NewMovies","page","setPage","setUrl","setLoadingState","response","movies","minHeight","total_results","Popular","Search","inputValue","setInputValue","htmlFor","onKeyUp","e","target","value","placeholder","prefix","VideoCameraFilled","MenuTop","theme","mode","defaultSelectedKeys","backgroundColor","Footer","Layout","App","Header","Content","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a1ef0f7.chunk.js","sourcesContent":["export const URL_API = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"e33f37bfeb5b39802d2c095f1753c610\";\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url, options) =>{\r\n    const [result, setResult] = useState(null);\r\n    const [loading, setLoading] =  useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\nuseEffect(() =>{\r\n    const getData = async() =>{\r\n        try{\r\n            const res = await fetch(url, options);\r\n            const json= await res.json();\r\n            setResult(json);\r\n            setLoading(false)\r\n        } catch (err){\r\n            setError(err);\r\n            setLoading(false)\r\n        }\r\n    }\r\n    getData();\r\n}, [url, options])\r\n\r\nreturn {result, loading, error};\r\n}\r\n\r\nexport default useFetch;","import { Spin } from \"antd\";\r\nimport \"./Loading.sass\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { List, Button, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\nimport Loading from \"../Loading\";\r\nimport \"./MovieList.sass\";\r\n\r\nconst MovieList = (props) => {\r\n  const { title, urlMovieList } = props;\r\n\r\n  if (urlMovieList.Loading || !urlMovieList.result) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <List\r\n      className=\"movie-list\"\r\n      size=\"default\"\r\n      header={<h2>{title}</h2>}\r\n      bordered\r\n      dataSource={urlMovieList.result.results}\r\n      renderItem={(movie) => <RenderMovie movie={movie} />}\r\n    />\r\n  );\r\n};\r\n\r\nconst RenderMovie = (props) => {\r\n  const {\r\n    movie: { poster_path, id, title },\r\n  } = props;\r\n\r\n  const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n\r\n  return (\r\n    <List.Item className=\"movie-list__movir\">\r\n      <List.Item.Meta\r\n        avatar={<Avatar src={posterPath} />}\r\n        title={<Link to={`/movie/${id}`}> {title}</Link>}\r\n      />\r\n      <Link to={`/movie/${id}`}>\r\n        <Button type=\"primary\" shape=\"circle\" icon={<RightOutlined />}></Button>\r\n      </Link>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { Carousel, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\nimport \"./SliderMovies.sass\";\r\n\r\nconst SliderMovies = (props) => {\r\n  const { newMovies } = props;\r\n\r\n  if (newMovies.loading || !newMovies.result) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const { results } = newMovies.result;\r\n\r\n  return (\r\n    <Carousel autoplay>\r\n      {results.map((movie) => (\r\n        <Movie key={movie.id} movie={movie} />\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nconst Movie = (props) => {\r\n  const {\r\n    movie: { id, backdrop_path, title, overview },\r\n  } = props;\r\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n  return (\r\n    <div\r\n      className=\"slider-movies__movie\"\r\n      style={{ backgroundImage: `url(\"${backdropPath}\")` }}\r\n    >\r\n      <div className=\"slider-movies__movie-info\">\r\n        <div>\r\n          <h2>{title}</h2>\r\n          <p>{overview}</p>\r\n          <Link to={`/movie/${id}`}>\r\n            <Button type=\"primary\" className=\"boton\">\r\n              More\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderMovies;\r\n","import { URL_API, API_KEY } from \"../../utils/constants\";\r\nimport { Row, Col } from \"antd\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\nimport SliderMovies from \"../../components/SliderMovies\";\r\nimport \"./home.sass\";\r\n\r\nconst Home = () => {\r\n  const url = `${URL_API}/movie/now_playing?api_key=${API_KEY}&language=en-ES&page=1`;\r\n  const newMovies = useFetch(url);\r\n\r\n  const urlPopular = `${URL_API}/movie/popular?api_key=${API_KEY}&language=en-ES&page=1`;\r\n  const popularMovies = useFetch(urlPopular);\r\n\r\n  const urlTopRanked = `${URL_API}/movie/top_rated?api_key=${API_KEY}&language=en-ES&page=1`;\r\n  const topRankedMovies = useFetch(urlTopRanked);\r\n\r\n  return (\r\n    <div>\r\n      <SliderMovies newMovies={newMovies} />\r\n      <Row style={{marginBottom:'50px'}}>\r\n        <Col xs={24} sm={24} md={12} lg={12}>\r\n          <MovieList title=\"Popular Movies\" urlMovieList={popularMovies} />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={12} lg={12}>\r\n          <MovieList title=\"Top Best Movies\" urlMovieList={topRankedMovies} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"error-container\">\r\n      <div className=\"error-404\"></div>\r\n      <p>Sorry, the page you visited does not exist.</p>\r\n      <Link to=\"/\">\r\n        {\" \"}\r\n        <Button type=\"primary\"> Home</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./ModalVideo.sass\";\r\n\r\nconst ModalVideo = (props) => {\r\n  const { isOpen, close, videoKey, videoPlatform } = props;\r\n\r\n  const [urlVideo, setUrlVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    switch (videoPlatform) {\r\n      case \"YouTube\":\r\n        setUrlVideo(`https://youtu.be/${videoKey}`);\r\n        break;\r\n      case \"Vimeo\":\r\n        setUrlVideo(`https://vimeo.com/${videoKey}`);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [videoKey, videoPlatform]);\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-video\"\r\n      visible={isOpen}\r\n      centered\r\n      onCancel={close}\r\n      footer={false}\r\n    >\r\n      <ReactPlayer url={urlVideo} controls muted />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalVideo;\r\n","import { useState } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\r\nimport { URL_API, API_KEY } from \"../../utils/constants\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ModalVideo from \"../../components/ModalVideo\";\r\nimport \"./movie.sass\";\r\n\r\nconst Movie = () => {\r\n  const { id } = useParams(); //nos da el ID\r\n\r\n  const url = `${URL_API}/movie/${id}?api_key=${API_KEY}&language=en-US`;\r\n  const movieInfo = useFetch(url);\r\n\r\n  if (movieInfo.Loading || !movieInfo.result) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return <RenderMovie movieInfo={movieInfo} />;\r\n};\r\n\r\nconst RenderMovie = (props) => {\r\n  const {\r\n    movieInfo: {\r\n      result: { backdrop_path, poster_path },\r\n    },\r\n  } = props;\r\n\r\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n  return (\r\n    <div\r\n      className=\"movie\"\r\n      style={{ backgroundImage: `url('${backdropPath}')` }}\r\n    >\r\n      <div className=\"movie__dark\">\r\n        <Row className=\"fila\">\r\n          <Col span={8} offset={3} className=\"movie__poster\">\r\n            <PosterMovie image={poster_path} />\r\n          </Col>\r\n          <Col span={9} className=\"movie-info-container\">\r\n            <MovieInfo movieInfo={props.movieInfo} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PosterMovie = (props) => {\r\n  const { image } = props;\r\n  let posterPath;\r\n  if (image === null) {\r\n    posterPath =\r\n      \"https://i.pinimg.com/736x/04/85/5b/04855bae4a3237935ebfc655293400ca.jpg\";\r\n  } else {\r\n    posterPath = `https://image.tmdb.org/t/p/original${image}`;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ backgroundImage: `url('${posterPath}')` }}\r\n      className=\"movie-poster-image\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst MovieInfo = (props) => {\r\n  const {\r\n    movieInfo: {\r\n      result: { title, id, release_date, overview, genres },\r\n    },\r\n  } = props;\r\n\r\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\r\n  const url = `${URL_API}/movie/${id}/videos?api_key=${API_KEY}&language=es-US`;\r\n  const videoMovie = useFetch(url);\r\n\r\n  const openModal = () => setIsVisibleModal(true);\r\n\r\n  const closeModal = () => setIsVisibleModal(false);\r\n\r\n  const renderVideo = () => {\r\n    if (videoMovie.result) {\r\n      if (videoMovie.result.results.length > 0) {\r\n        return (\r\n          <div>\r\n            <Button\r\n              icon={<PlayCircleOutlined />}\r\n              onClick={openModal}\r\n              className=\"button\"\r\n            >\r\n              trailer\r\n            </Button>\r\n            <ModalVideo\r\n              videoKey={videoMovie.result.results[0].key}\r\n              videoPlatform={videoMovie.result.results[0].site}\r\n              isOpen={isVisibleModal}\r\n              close={closeModal}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"movie-info\">\r\n      <div className=\"info\">\r\n        <h1>\r\n          {title}\r\n          <span>{moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}</span>\r\n        </h1>\r\n        {renderVideo()}\r\n      </div>\r\n      <div className=\"content\">\r\n        <h3>General</h3>\r\n        <p>{overview === \"\" ? \"No information\" : overview}</p>\r\n        <h3>Genres</h3>\r\n        <ul>\r\n          {genres.length === 0\r\n            ? \"No information\"\r\n            : genres.map((gender) => <li key={gender.id}>{gender.name}</li>)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { Card, Col, Row } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\nimport \"./MovieCard.sass\";\r\n\r\nconst MovieCard = (props) => {\r\n  const { url, loadingState } = props;\r\n  const { results } = url;\r\n\r\n  if (!results) {\r\n    return (\r\n      <div className={!loadingState ? \"hidden\" : null}>\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Row gutter={[8, 32]} className=\"centrar\">\r\n      {results.map((movie) => (\r\n        <CardMovie key={movie.id} movie={movie} />\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst CardMovie = (props) => {\r\n  const { Meta } = Card;\r\n  const {\r\n    movie: { id, title, poster_path },\r\n  } = props;\r\n\r\n  let backdropPath;\r\n\r\n  if (poster_path === null) {\r\n    backdropPath =\r\n      \"https://i.pinimg.com/736x/04/85/5b/04855bae4a3237935ebfc655293400ca.jpg\";\r\n  } else {\r\n    backdropPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n  }\r\n  return (\r\n    <Col lg={6} className=\"centrar\">\r\n      <Link to={`/movie/${id}`}>\r\n        <Card\r\n          className=\"card\"\r\n          hoverable\r\n          cover={\r\n            <img\r\n              alt={title}\r\n              src={backdropPath}\r\n              className=\"img-card\"\r\n            />\r\n          }\r\n        >\r\n          <Meta title={title} className=\"title-card\" />\r\n        </Card>\r\n      </Link>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import { Pagination } from \"antd\";\r\nimport \"./PaginationMovie.sass\";\r\n\r\nconst PaginationMovie = (props) => {\r\n  const { currentPage, totalItems, onChangePage } = props;\r\n  return (\r\n    <Pagination\r\n      current={currentPage}\r\n      total={totalItems}\r\n      pageSize={20}\r\n      onChange={onChangePage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationMovie;\r\n","import { useState, useEffect } from \"react\";\r\nimport { URL_API, API_KEY } from \"../utils/constants\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport PaginationMovie from \"../components/PaginationMovie\";\r\n\r\nconst NewMovies = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [url, setUrl] = useState([]);\r\n  const [loadingState, setLoadingState] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\r\n        `${URL_API}/movie/now_playing?api_key=${API_KEY}&languaje=en-ES&page=${page}`\r\n      );\r\n      const movies = await response.json();\r\n      setLoadingState(false);\r\n      setUrl(movies);\r\n    })();\r\n  }, [page]);\r\n\r\n  const onChangePage = (page) => setPage(page);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ minHeight: \"calc(100vh - 140px)\" }}>\r\n        <h1>New Movies</h1>\r\n        <MovieCard url={url} loadingState={loadingState} />\r\n        <PaginationMovie\r\n          currentPage={url.page}\r\n          totalItems={url.total_results}\r\n          onChangePage={onChangePage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMovies;\r\n","import { useState, useEffect } from \"react\";\r\nimport { URL_API, API_KEY } from \"../utils/constants\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport PaginationMovie from \"../components/PaginationMovie\";\r\n\r\nconst Popular = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [url, setUrl] = useState([]);\r\n  const [loadingState, setLoadingState] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\r\n        `${URL_API}/movie/popular?api_key=${API_KEY}&languaje=en-US&page=${page}`\r\n      );\r\n      const movies = await response.json();\r\n      setLoadingState(false);\r\n      setUrl(movies);\r\n    })();\r\n  }, [page]);\r\n\r\n  const onChangePage = (page) => setPage(page);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ minHeight: \"74.5vh\" }}>\r\n        <h1>Popular Movies</h1>\r\n        <MovieCard url={url} loadingState={loadingState} />\r\n        <PaginationMovie\r\n          currentPage={url.page}\r\n          totalItems={url.total_results}\r\n          onChangePage={onChangePage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","import { useState, useEffect } from \"react\";\r\nimport { URL_API, API_KEY } from \"../../utils/constants\";\r\nimport { Input } from \"antd\";\r\nimport { VideoCameraFilled } from \"@ant-design/icons\";\r\nimport MovieCard from \"../../components/MovieCard\";\r\nimport PaginationMovie from \"../../components/PaginationMovie\";\r\nimport \"./search.sass\";\r\n\r\nconst Search = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [url, setUrl] = useState([]);\r\n  const [loadingState, setLoadingState] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\r\n        `${URL_API}/search/movie?api_key=${API_KEY}&languaje=en-ES&query=${inputValue}&page=${page}&include_adult=false`\r\n      );\r\n      const movies = await response.json();\r\n      setLoadingState(false);\r\n      setUrl(movies);\r\n    })();\r\n  }, [page, inputValue]);\r\n\r\n  const onChangePage = (page) => setPage(page);\r\n\r\n  const onHandlerInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-container\">\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"search\">Search Movie</label>\r\n          <Input\r\n            onKeyUp={onHandlerInput}\r\n            size=\"large\"\r\n            placeholder=\"Type here to search\"\r\n            prefix={<VideoCameraFilled />}\r\n          />\r\n        </div>\r\n        <MovieCard url={url} loadingState={loadingState} />\r\n        <PaginationMovie\r\n          currentPage={url.page}\r\n          totalItems={url.total_results}\r\n          onChangePage={onChangePage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Link } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport \"./MenuTop.sass\";\r\n\r\nconst MenuTop = () => {\r\n  return (\r\n    <div className=\"menu-top\">\r\n      <div className=\"menu-top__logo\">\r\n        <div className=\"logo2\"></div>\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        style={{ backgroundColor: \"#0F7173\" }}\r\n      >\r\n        <Menu.Item key=\"1\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Link to=\"/new-movies\">New Movies</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\">\r\n          <Link to=\"/popular\">Popular</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\">\r\n          <Link to=\"/search\">Search</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuTop;\r\n","import { Layout } from \"antd\";\r\nimport \"./Footer.sass\";\r\n\r\nconst Footer = () => {\r\n  const { Footer } = Layout;\r\n\r\n  return (\r\n    <Footer className=\"footer\">\r\n      <p>Hecho por Mari y Silvi 🎬</p>\r\n    </Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Layout } from \"antd\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n//pages\r\nimport Home from \"./pages/home\";\r\nimport Error404 from \"./pages/error404\";\r\nimport Movie from \"./pages/movie\";\r\nimport NewMovies from \"./pages/new-movies\";\r\nimport Popular from \"./pages/popular\";\r\nimport Search from \"./pages/search\";\r\n\r\n//components\r\nimport MenuTop from \"./components/MenuTop\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  const { Header, Content } = Layout;\r\n\r\n  return (\r\n    <Layout>\r\n      <Router>\r\n        <Header className=\"header\">\r\n          <MenuTop />\r\n        </Header>\r\n        <Content style={{minHeight:'fit-content'}}>\r\n          <Switch>\r\n            <Route exact={true} path=\"Movies-proyect-ADA/\" component={Home} />\r\n            <Route exact={true} path=\"Movies-proyect-ADA/new-movies\" component={NewMovies} />\r\n            <Route exact={true} path=\"Movies-proyect-ADA/popular\" component={Popular} />\r\n            <Route exact={true} path=\"Movies-proyect-ADA/search\" component={Search} />\r\n            <Route exact={true} path=\"Movies-proyect-ADA/movie/:id\" component={Movie} />\r\n            <Route path=\"*\" component={Error404} />\r\n          </Switch>\r\n        </Content>\r\n        <Footer />\r\n      </Router>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}